---
# Role tasks

- block:
    # Seems that user module doesn't work correctly if you pass uid parameter
    # with an existen user (with no uid change) and there are processes running
    # with that user. So, first we check existence of the users as workaround

    - name: check users
      shell: "getent passwd {{ item }}"
      register: users_check_result
      changed_when: no
      failed_when: no
      loop: "{{ users }}"
      loop_control:
        label: "{{ item.name }}"

    - name: setup users
      user:
        append: >-
          {{ item.append | default(users_defaults.append) | default(omit) }}
        comment: >-
          {{ item.comment | default(users_defaults.comment) | default(omit) }}
        create_home: >-
          {{ item.create_home | default(users_defaults.create_home) | default(omit) }}
        expires: >-
          {{ item.expires | default(users_defaults.expires) | default(omit) }}
        force: >-
          {{ item.force | default(users_defaults.force) | default(omit) }}
        generate_ssh_key: >-
          {{ item.generate_ssh_key | default(users_defaults.generate_ssh_key) | default(omit) }}
        group: >-
          {{ item.group | default(users_defaults.group) | default(omit) }}
        groups: >-
          {{ item.groups | default(users_defaults.groups) | default(omit) }}
        home : >-
          {{ item.home | default(users_defaults.home) | default(omit) }}
        local : >-
          {{ item.local | default(users_defaults.local) | default(omit) }}
        login_class: >-
          {{ item.login_class | default(users_defaults.login_class) | default(omit) }}
        move_home: >-
          {{ item.move_home | default(users_defaults.move_home) | default(omit) }}
        name: >-
          {{ item.name | default(users_defaults.name) | default(omit) }}
        non_unique: >-
          {{ item.non_unique | default(users_defaults.non_unique) | default(omit) }}
        password: >-
          {{ item.password | default(users_defaults.password) | default(omit) }}
        password_lock: >-
          {{ item.password_lock | default(users_defaults.password_lock) | default(omit) }}
        remove: >-
          {{ item.remove | default(users_defaults.remove) | default(omit) }}
        seuser: >-
          {{ item.seuser | default(users_defaults.seuser) | default(omit) }}
        shell: >-
          {{ item.shell | default(users_defaults.shell) | default(omit) }}
        skeleton: >-
          {{ item.skeleton | default(users_defaults.skeleton) | default(omit) }}
        ssh_key_bits: >-
          {{ item.ssh_key_bits | default(users_defaults.ssh_key_bits) | default(omit) }}
        ssh_key_comment: >-
          {{ item.ssh_key_comment | default(users_defaults.ssh_key_comment) | default(omit) }}
        ssh_key_file: >-
          {{ item.ssh_key_file | default(users_defaults.ssh_key_file) | default(omit) }}
        ssh_key_passphrase: >-
          {{ item.ssh_key_passphrase | default(users_defaults.ssh_key_passphrase) | default(omit) }}
        ssh_key_type: >-
          {{ item.ssh_key_type | default(users_defaults.ssh_key_type) | default(omit) }}
        system: >-
          {{ item.system | default(users_defaults.system) | default(omit) }}
        uid: >-
          {{ item.uid | default(users_defaults.uid) | default(omit) }}
        update_password : >-
          {{ item.update_password | default(users_defaults.update_password) | default(omit) }}
      when: users_check_result.results[index].rc != 0
      loop: "{{ users }}"
      loop_control:
        index_var: index
        label: "{{ item.name }}"
  tags:
    - role::users
